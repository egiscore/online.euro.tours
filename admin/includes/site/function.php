<?php
 function Get_Config_Value($what) { if ($what == '') { return -1; } $db = Samo_Registry::get('db'); $sql = $db->formatExec( '<OFFICEDB>.dbo.up_WEB_3_Admin_tour_config', [ 'Section' => 'online_config', 'What' => $what, 'UserCode' => INTERNET_USER, ] ); $result = $db->fetchRow($sql)['Value']; return $result; } function Get_Message_Lang($lng, $key) { $language = $GLOBALS['language']; if (isset($language[$lng][$key])) { return $language[$lng][$key]; } else { if (isset($language['rus'][$key])) { return $language['rus'][$key]; } else { return 'TEXT NOT FOUND'; } } } function Get_Site_Message_Lang($lng, $key) { $messages = []; include _ROOT . 'includes/messages/messages_' . $lng . '.php'; if (isset($messages[$key])) { return $messages[$key]; } else { return 'TEXT NOT FOUND'; } } function Check_Str($string, $words = array(), $length = 0) { if (($length != 0) and (strlen($string) > $length)) { die('Не корректно отправлены параметры на сервер.'); } $reg = "/['=;\"]|\*\/|\/\*|-{2,}|char\(\d*\)"; $addWord = ""; foreach ($words as $word) { $addWord .= "|$word"; } if (preg_match($reg . $addWord . '/i', $string)) { die('Не корректно отправлены параметры на сервер.'); } return true; } function Is_Digital($value, $allow_null = 1, $separator = '') { $reg = "/^([-]?\d+"; if (strlen($separator) == 1) { $reg .= "\\" . $separator; } $reg .= ")*\$/i"; if ($value != '') { if (!preg_match($reg, $value)) { if (($allow_null == 1) and (preg_match("/^null\$/i", $value))) { return true; } die('Не корректно отправлены параметры на сервер.'); } } return true; } function Check_Date($value) { $RegDMY = '/^(\d{2})[\/](\d{2})[\/](\d{4})$/i'; $RegYMD2 = '/^(\d{4})(\d{2})(\d{2})$/i'; $td = array(); if (preg_match($RegDMY, $value, $td)) { return Comp_Date($td[3], $td[2], $td[1]); } if (preg_match($RegYMD2, $value, $td)) { return Comp_Date($td[1], $td[2], $td[3]); } throw new InvalidArgumentException(__FUNCTION__ . '(' . $value . ')'); } function Comp_Date($y, $m, $d, $ho = 0, $mi = 0, $se = 0) { $date = array(); if (($y < 1900) or ($y > 2079)) { return false; } $date['year'] = $y; if (($m < 1) or ($m > 12) or (($m > 6) and ($y == 2079))) { return false; } $date['mon'] = Add_Zero($m); if (($d < 1) or ($d > 31) or (($d > 6) and ($m == 6) and ($y == 2079))) { return false; } $date['day'] = Add_Zero($d); if ($ho - 23 > 0) { return false; } $date['hour'] = Add_Zero($ho); if ($mi - 59 > 0) { return false; } $date['min'] = Add_Zero($mi); if ($se - 59 > 0) { return false; } $date['sec'] = Add_Zero($se); return $date; } function Add_Zero($value) { return ((strlen($value) == 1) ? ('0' . $value) : ($value)); } function Del_Zero($value) { return (((strlen($value) == 2) and ($value < 10)) ? ($value[1]) : ($value)); } function strConv($str) { return mb_convert_encoding($str, 'UTF-8', 'windows-1251'); } function strConv1251($str) { return mb_convert_encoding($str, 'windows-1251', 'UTF-8'); } function get_help_button($id, $js = true) { $response = Samo_Registry::get('response'); if ($response->respond_to_js()) { return; } $version = isset($_SESSION['dokuwiki_version']) ? $_SESSION['dokuwiki_version'] : false; if ($version === false) { $version = include _ROOT . 'includes/version.php'; $url = 'http://dokuwiki.samo.ru/online/?ver=' . $version['path']; if (!($version = @file_get_contents($url, false, stream_context_create(array('http' => array('method' => 'GET', 'timeout' => 5)))))) { $version = ''; } elseif (false == preg_match('~^ver.[\d]+.[\d]+$~', $version)) { $version = ''; } $_SESSION['dokuwiki_version'] = $version; } if ($version) { $url = 'http://dokuwiki.samo.ru/online/?q=tags/' . $version . '/html/' . str_replace(':', '/', (strpos($id, '#') === false ? ($id . '.html') : str_replace('#', '.html#', $id))); } else { $url = 'http://dokuwiki.samo.ru/doku.php?id=' . $id; } if ($js) { echo '<script language="javascript">parent.menu.document.getElementById("help-icon").href = "' . $url . '";</script>'; } else { echo '<div><a href="' . $url . '" id="help-icon" target="_blank"><img src="' . $GLOBALS['http_site'] . 'admin/imgs/qw.png" alt="Помощь"></a></div>'; } } 