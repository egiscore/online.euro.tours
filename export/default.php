<?php
chdir(dirname(__DIR__)); include 'properties.php'; if (!defined('FRIENDLY_URLS')) { define('FRIENDLY_URLS', isset($_SERVER['FRIENDLY_URLS']) && $_SERVER['FRIENDLY_URLS'] == 1); } $action = (isset($_GET['samo_action'])) ? $_GET['samo_action'] : 'unexpected'; $title = array('SAMO_API'); if (isset($_GET['samo_action']) && $action == 'api' && isset($_GET['action'])) { $title[] = $_GET['action']; } else { $title[] = $action; } ini_set('default_charset', 'utf-8'); ini_set('html_errors', 0); include _ROOT . 'includes/classes/class.samo_config.php'; include _ROOT . 'includes/db.php'; Samo_Debug_Helper::proctitle(implode('::', $title)); unset($title); Samo_Loader::register_autoload(); Samo_Registry::set('logger', Log::singleton(LOG_TYPE)); foreach (['REC_ON_PAGE', 'MAXRECORD'] as $name) { foreach (['_POST', '_GET', '_COOKIE'] as $REQ) { $_REQ = $$REQ; if (isset($_REQ[$name])) { unset($_REQ[$name]); } } } $response = Samo_Loader::load_object('Samo_Response'); Samo_Registry::set('response', $response); $response->charset = 'utf-8'; $format = ifs(Samo_Request::find('type'), 'json'); $response->respond_to($format); Samo_Registry::load('cache', 'Samo_Cache'); function ifs(...$args) { foreach ($args as $arg) { if ($ret = $arg) { break; } } return $ret; } function ___recover_cp($ele) { if (is_array($ele)) { return array_map('___recover_cp', $ele); } return Samo_String::set($ele)->trim()->ansi()->__toString(); } Samo_Registry::set('_GET', $_GET); $_GET = array_map('___recover_cp', $_GET); if (Samo_Request::is_post()) { Samo_Registry::set('_POST', $_POST); $_POST = array_map('___recover_cp', $_POST); } function _xml_format($result, $root = 'Data') { return sprintf('<Response generator="SAMO-Soft" version="1.0"><' . $root . '>%s</' . $root . '></Response>', Samo_String::set(is_array($result) ? implode('', $result) : $result)->utf8()); } if ($action == 'soap') { $wsdl_name = _ROOT . 'soap.wsdl'; if (file_exists($wsdl_name)) { if (!Samo_Request::is_post()) { $response->respond_to('xml'); $wsdl = file_get_contents($wsdl_name); $result = preg_replace('~(<soap:address location=")([^"]*)("\/>)~', '$1' . Samo_Url::route('api', ['samo_action' => 'soap']) . '$3', $wsdl); } else { try { $db = db_connect(null, null); $server = new SOAPServer($wsdl_name, ['cache_wsdl' => WSDL_CACHE_NONE]); $workhorse = Samo_Loader::load_object('Export_Model'); $server->setObject($workhorse); if (isset($_SERVER['HTTP_SOAPACTION'])) { $sql = $db->formatExec( '<ONLINEDB>.dbo.up_WEB_3_online_stats', [ 'module' => 'api-soap', 'action' => str_replace('http://samo.ru/', '', trim($_SERVER['HTTP_SOAPACTION'], '"')), 'client' => ip2long(Samo_Request::remote_addr()), 'oauth_token' => Samo_Request::get('oauth_token'), ] ); $db->query($sql); $db->freeResult(); unset($sql); } return $server->handle(); } catch (Exception $e) { return new SoapFault('Server', 'Error'); } } } else { $response->not_found(); } } else { try { if ($townfrom = Samo_Request::intval('TOWNFROMINC')) { $TOWNFROMINC = $_GET['TOWNFROMINC'] = $townfrom; } else { $TOWNFROMINC = TOWNFROMINC; } if ($state = Samo_Request::intval('STATEINC')) { $STATEINC = $_GET['STATEINC'] = $state; } else { $STATEINC = null; } $db = db_connect($TOWNFROMINC, $STATEINC); $oauth = new Samo_OAuth2($db); switch ($action) { case 'reference': case 'auth': case 'deposit': $required_scope = 'export-dictionary'; break; case 'update_pnr': $required_scope = 'gds-ping'; break; default: $required_scope = 'online-api'; break; } if ($oauth->verifyAccessToken($required_scope)) { if ($origin = Samo_Request::http_origin()) { $origins = $oauth->getOrigin(); if (in_array($origin, $origins)) { $response->headers('Access-Control-Allow-Origin', $origin); $response->headers('Access-Control-Allow-Credentials', 'true'); } } } if (Samo_Request::is_options()) { if ($origin = Samo_Request::http_origin()) { $response->headers('Access-Control-Allow-Origin', $origin); } $response->headers('Access-Control-Allow-Methods', 'OPTIONS, GET, POST'); $response->headers('Access-Control-Allow-Headers', 'Content-Type, X-Requested-With, User-Agent, If-Modified-Since, Cache-Control, Accept, Authorization, Cookie'); $result = ''; } else { $API = Samo_Loader::load_class('Samo_API'); $export = new $API($response, $db, $oauth); Samo_Registry::set('response', $response); $sql = $db->formatExec( '<ONLINEDB>.dbo.up_WEB_3_online_stats', [ 'module' => 'api', 'action' => ('api' === $action) ? ifs(Samo_Request::get('action'), $action) : $action, 'client' => ip2long(Samo_Request::remote_addr()), 'oauth_token' => Samo_Request::get('oauth_token'), ] ); $db->query($sql); $db->freeResult(); unset($sql); $result = call_user_func(array($export, $action)); } } catch (Exception $e) { $callback = (null !== ($tmp = Samo_Request::get('callback'))) ? $tmp : false; $error = (null !== ($tmp = Samo_Request::get('error'))) ? $tmp : false; $result = Samo_String::set($e->getMessage())->utf8(); if (!$error) { $result = array('error' => $result); } elseif ($error) { $callback = $error; } if ($action == "reference") { $message = $result['error']; if (DEBUG) { $exception_type = get_class($e); if ('Database_Exception' == $exception_type) { $message = $e->getError(); $message .= " [SQL= " . $e->getSql() . "] [Server=" . $e->getServer() . ']'; } $message = Samo_String::set('[' . get_class($e) . "] " . $message)->utf8(); } $result = _xml_format(htmlspecialchars($message, ENT_XML1, 'utf-8'), 'Error'); } else { $result = json_encode($result); if ($callback) { $result = sprintf('%s(%s)', $callback, $result); } if (401 == $e->getCode()) { $response->unauthorized($result); } } } } $response->output($result); $response->finish(); 