<?php
 class AlfaBank { protected $login = ''; protected $password = ''; protected $merchantLogin = ''; protected $currencyCode = 810; const SERVICE_URL = 'https://engine.paymentgate.ru/payment/rest/'; public function __construct($login, $password, $merchantLogin = '') { $this->login = $login; $this->password = $password; $this->merchantLogin = $merchantLogin; } public function getPayURLAndTransaction($orderNumber, $amount, $returnURL, $failURL = '', $description = '') { $amount *= 100; $params = array( 'orderNumber' => $orderNumber, 'amount' => $amount, 'currency' => $this->currencyCode, 'returnUrl' => $returnURL, 'failUrl' => $failURL, 'description' => $description ? mb_convert_encoding($description, 'utf-8', 'windows-1251') : 'Payment ' . $orderNumber ); if ($this->merchantLogin) { $params['merchantLogin'] = $this->merchantLogin; } $res = $this->_request( 'register', $params ); return array($res['formUrl'], $res['orderId']); } public function getOrderInfo($transactionId) { $res = $this->_request( 'getOrderStatus', array( 'orderId' => $transactionId ) ); return $res; } protected function _request($action, $params) { $params['userName'] = $this->login; $params['password'] = $this->password; $url = self::SERVICE_URL . $action . '.do'; $res = Samo_Curl::request($url, $params); if ($res === false) { throw new Samo_Exception(Samo_EPlatez::messages('ACQUIRING_RESPONSE_FAILED')); } $res = json_decode($res, true); if (!($action == 'getOrderStatus' && isset($res['OrderStatus']))) { foreach (array('errorCode' => 'errorMessage', 'ErrorCode' => 'ErrorMessage') as $o => $t) { if (isset($res[$o]) && $res[$o]) { throw new Samo_Exception(isset($res[$t]) && $res[$t] ? mb_convert_encoding($res[$t], 'windows-1251', 'utf-8') : Samo_EPlatez::messages('ACQUIRING_UNKNOWN_ERROR')); } } } return $res; } public function setCurrencyCode($code) { $this->currencyCode = $code; return $this; } } 