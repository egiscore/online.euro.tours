<?php
 class Samo_Controller_Acquiring extends Samo_Controller { public function default_action() { Samo_Registry::get('response')->not_found(); } public function CHECK() { try { $this->model->isEnabled(); foreach ($this->model->getPayInfo() as $n => $v) { $this->view->assign($n, $v); } $this->view ->assign('moduleName', $this->model->getModuleName()) ->assign('hiddenFields', $this->model->getHiddenFields()) ->assign('visibleFields', $this->model->getVisibleFields()) ->assign('formAction', $this->model->getFormAction()) ->assign('minAmount', floatval($this->model->minAmount)) ->assign('maxAmount', floatval($this->model->maxAmount)); $this->view ->popup_template('../acquiring_form.tpl', $this->messages['ACQUIRING_POPUP_TITLE'], 360, 80) ->js_var('samo.CLAIM', $this->model->defaults['CLAIM']) ->js_var('getPayData', true) ->js_call('samo.' . $this->model->getModuleName()); } catch (Samo_Exception $e) { $this->view->popup_message($e->getMessage(), $this->messages['POPUP_TITLE'], 350, 60); } } public function GET_PAY_DATA() { try { $this->model->checkPayData(); $getParams = array(); if ($newFieldsVal = $this->model->makeFormData()) { if (is_array($newFieldsVal)) { foreach ($newFieldsVal as $i => $j) { $this->view->element_value('#acqf_' . $i, $j); } } else { if (is_string($newFieldsVal) && strpos($newFieldsVal, 'http') === 0) { $url = parse_url($newFieldsVal); parse_str($url['query'], $getParams); $sel = '#acquiring_' . $this->model->getModuleName() . '_container form.pay_variant'; $this->view ->element_prop($sel, 'action', $url['scheme'] . '://' . $url['host'] . $url['path']) ->element_prop($sel, 'method', 'GET'); } } } $this->view->js_call($this->model->getModuleName() . '_result', $getParams ? $getParams : false); } catch (Samo_Exception $e) { $this->view->error($e->getMessage()); } } public function CALLBACK() { try { $result = $this->model->parseCallback(); $result = $result ? $result : Samo_Request::find('RESULT'); $claim = Samo_Utils::ifs(Samo_Request::intval('CLAIM'), (isset($_SESSION['samo_auth']['CLAIM']) ? $_SESSION['samo_auth']['CLAIM'] : null)); if ($claim && isset($_SESSION['samo_auth']) && isset($_SESSION['samo_auth']['type']) && $_SESSION['samo_auth']['type'] == 'person') { if ($result == 'OK') { $this->view->redirect_to(Samo_Url::route('cl_refer_person', ['CLAIM' => $claim, 'DOPAY' => 2])); } else { $_SESSION['samo_auth']['pay_error'] = $this->messages['ACQUIRING_PAY_RESULT_FAIL']; $this->view->redirect_to(Samo_Url::route('cl_refer_person', ['CLAIM' => $claim, 'DOPAY' => 3])); } } else { $this->view ->assign('result', $result) ->render('../acquiring_callback'); } } catch (Exception $e) { $message = (($e instanceof Samo_Exception) || ($e instanceof WSPAY_exception)) ? $e->getMessage() : 'Unknown error'; if (isset($_SESSION['samo_auth']) && isset($_SESSION['samo_auth']['type']) && $_SESSION['samo_auth']['type'] == 'person') { $_SESSION['samo_auth']['pay_error'] = $message; } else { $this->view->error($message); } } } } 