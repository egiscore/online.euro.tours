<?php
 class Samo_Curl { public static function request($url, $params = null, $method = 'POST', $header = []) { $res = false; if ($method == 'POST') { $res = self::postRequest($url, $params, $method, $header); } elseif ($method == 'GET') { $res = self::getRequest($url, $params); } return $res; } protected static function requestToCommandLine($url, $method = 'POST', $body = null) { $cmd = "curl -X{$method} "; if ($body) { $cmd .= "-d '{$body}' "; } $cmd .= "'{$url}'"; return self::logTransform($cmd); } protected static function postRequest($url, $params = null, $method = null, $header = []) { $method = $method ?: 'POST'; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); if ($method == 'POST') { $post = $params; if ($params && is_array($params)) { $post = http_build_query($params); } curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $post); } if ($header) { curl_setopt($ch, CURLOPT_HTTPHEADER, $header); } curl_setopt($ch, CURLOPT_FAILONERROR, 1); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0); $res = curl_exec($ch); curl_close($ch); try { if ($method == 'POST') { self::log(self::requestToCommandLine($url, 'POST', $post)); } elseif ($method == 'GET') { self::log(self::requestToCommandLine($url, 'GET')); } self::log($res); } catch (Exception $e) { self::log($e->getMessage()); } return $res; } protected static function getRequest($url) { return self::postRequest($url, null, 'GET'); } public static function logTransform($log) { $inputs = ['token', 'password', 'pass', 'pswd', 'authtoken']; foreach ($inputs as $input) { $pattern = "/{$input}=.*(&|')/Uis"; $log = preg_replace($pattern, "{$input}=*****$1", $log); } return $log; } public static function log($msg) { $result = false; $registry = Samo_Registry::instance(); if (isset($registry['logger'])) { $registry['logger']->log($msg); $result = true; } return $result; } } 