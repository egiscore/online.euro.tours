<?php
 class Samo_Database_Resultset { private $sql = null; private $datasets = null; private $currentRowset = 0; private $currentRow = 0; public function __construct($sql, $datasets) { $this->sql = $sql; $this->datasets = (!empty($datasets)) ? $datasets : null; } public function rowCount() { $currentRowset = $this->datasets[$this->currentRowset]; return !empty($currentRowset) ? count($currentRowset) : false; } public function numFields() { if (!empty($this->datasets)) { $fields = $this->datasets[$this->currentRowset][$this->currentRow]; return !empty($fields) ? count($fields) : 0; } return false; } public function fetchField($offset) { if (null !== $this->datasets) { $currentRow = $this->datasets[$this->currentRowset][$this->currentRow]; if ($offset == -1) { $offset = 0; } $fields = array_keys($currentRow); $name = $fields[$offset]; $return = new stdClass(); $return->name = $name; return $return; } return false; } public function nextRowset() { if (null !== $this->datasets) { if (isset($this->datasets[$this->currentRowset + 1])) { $this->currentRowset++; $this->currentRow = 0; return true; } } return false; } public function fetchRow() { if (null !== $this->datasets) { $currentRowset = $this->datasets[$this->currentRowset]; $currentRow = $this->currentRow; $this->currentRow++; if (isset($currentRowset[$currentRow])) { return $currentRowset[$currentRow]; } } return false; } public function getSql() { return $this->sql; } } 