<?php
class Samo_Environment { private $_env = array(); private $state = null; private function env() { $_SERVER['REQUEST_METHOD'] = 'GET'; $_SERVER['REMOTE_ADDR'] = '127.0.0.1'; if (!defined('ROUTES_PATH')) { define('ROUTES_PATH', _ROOT . 'routes.php'); } include ROUTES_PATH; include_once _ROOT . '/includes/common.php'; include_once _ROOT . '/includes/db.php'; } public function __construct($LOGIN = null, $PASSWORD = null) { $this->save(); if (null !== $LOGIN) { $this->login($LOGIN,$PASSWORD); } } public function save() { if ($this->state != null) { return false; } if (isset($_GET)) { $this->_env['_GET'] = $_GET; } if (isset($_POST)) { $this->_env['_POST'] = $_POST; } if (isset($_SESSION)) { $this->_env['_SESSION'] = $_SESSION; } if (isset($_COOKIE)) { $this->_env['_COOKIE'] = $_COOKIE; } if (isset($_SERVER)) { $this->_env['_SERVER'] = $_SERVER; } $this->env(); $reg = Samo_Registry::instance(); if (isset($reg['db'])) { $this->_env['db'] = $reg['db']; unset($reg['db']); } $this->db_connect(); $this->state = 'saved'; } public function restore() { if (null == $this->state) { return; } if (isset($this->_env['_GET'])) { $_GET = $this->_env['_GET']; } else { unset($_GET); } if (isset($this->_env['_POST'])) { $_POST = $this->_env['_POST']; } else { unset($_POST); } if (isset($this->_env['_SESSION'])) { $_SESSION = $this->_env['_SESSION']; } else { unset($_SESSION); } if (isset($this->_env['_COOKIE'])) { $_COOKIE = $this->_env['_COOKIE']; } else { unset($_COOKIE); } if (isset($this->_env['_SERVER'])) { $_SERVER = $this->_env['_SERVER']; } else { unset($_SERVER); } if (isset($this->_env['db'])) { Samo_Registry::set('db', $this->_env['db']); } $this->state = null; } public function __destruct() { return $this->restore(); } public function invoke_action($module, $action) { $routes = Samo_Registry::get('routes'); $_GET['samo_action'] = $action; Samo_Registry::set('module', $routes[$module]); Samo_Loader::load_object(ucwords($routes[$module]['controller'], '_')); ob_start(); try { call_user_func(array(Samo_Registry::get('controller'), $action)); } catch (Samo_Exception $e) { $e; } $output = ob_end_clean(); return $output; } public function invoke_method($module, $method, $params) { $routes = Samo_Registry::get('routes'); $module = $routes[$module]; if (isset($module['path']) && file_exists($module['path'] . '/lang/messages_' . Samo_Request::lang() . '.php')) { $messages = Samo_Registry::get('messages'); include $module['path'] . '/lang/messages_' . Samo_Request::lang() . '.php'; Samo_Registry::set('messages', $messages); } $model = Samo_Loader::load_object(ucwords($module['model'], '_')); $model->construct(); ob_start(); try { $res = call_user_func_array(array($model, $method), $params); } catch (Exception $e) { $e; } ob_end_clean(); if (isset($e)) { throw $e; } return $res; } private function db_connect() { $TOWNFROM = (isset($_GET['TOWNFROMINC'])) ? $_GET['TOWNFROMINC'] : TOWNFROMINC; $STATE = (isset($_GET['STATEINC'])) ? $_GET['STATEINC'] : 0; db_connect($TOWNFROM, $STATE); } public function login($login, $password) { if (isset($_SESSION['samo_auth']) && false !== $_SESSION['samo_auth']) { return true; } $samo = new Samo(); $tmp = $samo->checkAuth($login, $password); if ($tmp['Partner'] != -1) { $_SESSION['samo_auth'] = $tmp; return true; } throw new Samo_Exception(null,1000); } } 