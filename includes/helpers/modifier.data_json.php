<?php
function smarty_modifier_data_json($array, $type, $encode = true) { $escape = function ($str) { return str_replace("'", '&apos;', preg_replace('~[^[:print:]]~', '', trim($str))); }; $result = null; switch ($type) { case 'hotel': $result = array( 'name' => $escape($array['HotelLName']), 'key' => $array['HotelInc'], 'datebeg' => $array['DateBeg']->format('date'), 'dateend' => $array['DateEnd']->format('date'), 'roomKey' => $array['RoomInc'], 'htplaceKey' => $array['HtPlaceInc'], 'mealKey' => $array['MealInc'], 'count' => 1, 'cureKey' => 1, 'addinfant' => 0, 'routeIndex' => $array['RouteIndex'], 'partner' => $array['Partner'], ); break; case 'freight': $result = array( 'name' => $escape($array['Name']), 'key' => $array['Inc'], 'datebeg' => $array['DateBeg']->format('date'), 'dateend' => $array['DateEnd']->format('date'), 'classKey' => $array['ClassInc'], 'frplaceKey' => $array['FrPlaceInc'], 'addinfant' => 0, 'partner' => $array['Partner'], 'adultinfclass' => $array['ClassInc'], 'adultinffrplace' => $array['FrPlaceInc'], 'onlineclass' => $array['OnlineClass'], 'external' => intval($array['external']), ); break; case 'freightTableFilter': $result = [ 'full_airline' => $array['full_airline'], 'flight_types' => $array['flight_types'], 'fly_duration_on' => $array['fly_duration_on_min'], 'fly_duration_off' => $array['fly_duration_off_min'], 'fly_duration' => $array['fly_duration_min'], 'depart_time_on' => $array['depart_time_on_min'], 'depart_time_off' => $array['depart_time_off_min'], 'surcharge' => $array['surcharge'], ]; break; case 'insure': $result = array( 'name' => $escape($array['Name']), 'key' => $array['Inc'], 'count' => $array['count'], 'datebeg' => $array['DateBeg']->format('date'), 'dateend' => $array['DateEnd']->format('date'), 'type' => $array['type'], 'clients' => $array['clients'], 'partner' => $array['Partner'], ); if ($array['headUid']) { $result['headUid'] = $array['headUid']; } break; case 'payer': $result = array( 'PAYER_FIO' => $escape($array['FIO']), 'PAYER_ADDRESS' => $escape($array['Address']), 'PAYER_BORN' => $array['Born']->format('date'), 'PAYER_PSERIE' => $escape($array['PSerie']), 'PAYER_PNUMBER' => $escape($array['PNumber']), 'PAYER_PGIVENDATE' => $array['PGivenDate']->format('date'), 'PAYER_PGIVENORG' => $escape($array['PGivenOrg']), 'PAYER_PGIVENORG_MENT' => $escape($array['PCodeOrg']), 'PAYER_PHONES' => $escape($array['Phones']), ); break; case 'service': $result = array( 'name' => $escape($array['LName']), 'key' => $array['Inc'], 'datebeg' => $array['DateBeg']->format('date'), 'dateend' => $array['DateEnd']->format('date'), 'hotelKey' => $array['HotelInc'], 'mealKey' => $array['MealInc'], 'roomKey' => $array['RoomInc'], 'departureTownKey' => $array['SrcTownInc'], 'arrivalTownKey' => $array['TrgTownInc'], 'transportCompanyKey' => $array['AirlineInc'], 'transportKey' => $array['FreightInc'], 'classKey' => $array['ClassInc'], 'packet' => $array['Packet'], 'routeIndex' => $array['RouteIndex'], 'type' => 'stOther', 'stlname' => (isset($array['ServiceTypeLName'])) ? $escape($array['ServiceTypeLName']) : null, 'uid' => $array['uid'], 'partner' => isset($array['Partner']) ? $array['Partner'] : null, 'serviceTypeKey' => $array['ServiceTypeInc'], 'serviceCategoryKey' => $array['ServiceCategoryInc'], 'clients' => $array['clients'], 'count' => $array['count'], 'url' => $array['Url'], 'select_tourist' => $array['select_tourist'], ); break; case 'visa': $result = array( 'name' => $escape($array['VisaName']), 'key' => $array['VisaprInc'], 'type' => 'stVisa', 'partner' => isset($array['Partner']) ? $array['Partner'] : null, 'arrivalTownKey' => isset($array['VisaTownInc']) ? $array['VisaTownInc'] : null, ); break; case 'frplacement': $result = [ 'key' => $array['FreightInc'], 'datebeg' => $array['DateBeg']->format('date'), 'dateend' => $array['DateEnd']->format('date'), 'classKey' => $array['ClassInc'], ]; break; case 'currency': $result = [ 'currency' => $array['CurrencyInc'], 'base' => $array['CurrencyBaseInc'], ]; break; default: $result = null; break; } if ($encode) { $view = Samo_Registry::get('view'); return $view->json_encode($result, '"'); } return $result; } 