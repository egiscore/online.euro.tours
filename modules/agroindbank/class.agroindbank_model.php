<?php
class Agroindbank_Model extends Samo_Acquiring { protected $moduleName = 'agroindbank'; public function __construct() { $inc = $this->acquiringConfig('AGROINDBANK_SAMO_INC'); $login = $this->acquiringConfig('AGROINDBANK_SAMO_ALIAS'); if ($inc && $login) { parent::__construct(); $this->bankInc = $inc; $this->bankAlias = $login; } else { if ($this->is_module_installed('agroindbank')) { throw new Samo_Exception(get_called_class() . ' was not configured', 501); } } } public static function getAgroindbank() { return Samo_Loader::load_object( 'Agroindbank', self::acquiringConfig('AGROINDBANK_MERCHANT_URL'), self::acquiringConfig('AGROINDBANK_CAINFO_FILE'), self::acquiringConfig('AGROINDBANK_SSLCERT_FILE'), self::acquiringConfig('AGROINDBANK_SSLKEY_FILE'), self::acquiringConfig('AGROINDBANK_PASSWORD'), $_SERVER['REMOTE_ADDR'] ); } public function getFormAction() { return self::acquiringConfig('AGROINDBANK_CLIENT_URL'); } public function getHiddenFields() { return [ 'trans_id' => '' ]; } public function makeFormData() { $b = $this->getAgroindbank(); $res = $b->getTransactionId($this->_amount, self::acquiringConfig('AGROINDBANK_CURRENCY'), 'Pay for claim N'.$this->_claim); $inv = $this->getInvoice(); $this->saveCurrentTransactionId($res); $this->createCheckOrderStatusJob('return Agroindbank_Model::processOrderStatus(\'' . $inv['inumber'] . '\');'); return ['trans_id' => $res]; } public static function processOrderStatus($inumber) { $inv = self::getInvoiceInfo($inumber); if (!$inv['TransactionId']) { return true; } $b = self::getAgroindbank(); $st = $b->getTransactionStatus($inv['TransactionId']); switch ($st) { case 'OK': self::confirmOrder(self::acquiringConfig('AGROINDBANK_SAMO_ALIAS'), $inumber); return true; break; case 'FAILED': case 'DECLINED': case 'REVERSED': case 'AUTOREVERSED': case 'TIMEOUT': return true; break; case 'CREATED': case 'PENDING': default: return false; break; } } } 