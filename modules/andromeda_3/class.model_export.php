<?php
 class model_export extends model_andr { protected $recordLimitMax = 20000; protected $recordLimitMin = 500; public function replInit() { $return = $this->_db->fetchAll('<OFFICEDB>.dbo.up_andr_export_init'); return ($return) ? $return : $this->raiseError(9999); } public function replSend() { $recordLimit = $this->_fixRecordLimit(); $procName = strval($this->getVar('PROCNAME')); $startPoint = (!is_null($this->getVar('STARTPOINT'))) ? strval($this->getVar('STARTPOINT')) : null; $clearPoint = (!is_null($this->getVar('CLEARPOINT'))) ? strval($this->getVar('CLEARPOINT')) : null; $commit = (!is_null($this->getVar('CLEAR'))) ? intval($this->getVar('CLEAR')) : 0; $escape = function ($val) { return str_replace(array('[', ']', '.', ' ', "'"), '', $val); }; $type = strtolower(substr($procName, 0, strpos($procName, 'ONLINE_'))); $type = $escape($type); $procedure = '[up_andr_' . $type . 'repl_send]'; if (!is_null($this->getVar('CLEARPOINT'))) { $sql = $this->_db->formatExec( '<OFFICEDB>.dbo.' . $procedure, [ 'ProcName' => $procName, 'MaxCount' => 0, 'StartPoint' => $clearPoint, 'Commit' => 1, ] ); $query = $this->_db->query($sql); $this->_db->freeResult($query); } $sql = $this->_db->formatExec( '<OFFICEDB>.dbo.' . $procedure, [ 'ProcName' => $procName, 'MaxCount' => $recordLimit, 'StartPoint' => $startPoint, 'Commit' => $commit, ] ); if (false !== ($res = $this->_db->fetchOneRow($sql))) { return $res; } return null; } protected function _fixRecordLimit() { $recordLimit = $this->getVar('LIMIT'); if ($recordLimit > $this->recordLimitMax) { $recordLimit = $this->recordLimitMax; } elseif ($recordLimit < $this->recordLimitMin) { $recordLimit = $this->recordLimitMin; } return $recordLimit; } } 