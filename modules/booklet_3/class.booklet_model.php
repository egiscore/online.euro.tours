<?php
 class Booklet_Model extends Samo_Claim { protected $auth_required = array('agency', 'person'); public $fpdf_template = null; public function construct($claim = null, $people = null, $order = null) { $this->messages = Samo_Registry::get('messages'); return parent::construct($claim, $people, $order); } public function markIssued($claim = null, $people = null, $order = null, $opeople = null, $docum = '') { $this->defaults['CLAIM'] = $claim; return $this->SaveBooklet(); } public function SaveBooklet() { if (false !== ($result = $this->booklet())) { $sql = $this->db->formatExec( '<OFFICEDB>.dbo.up_WEB_4_booklet_Save', [ 'CLAIM' => intval($this->defaults['CLAIM']), 'UserCode' => $this->internet_user(), 'Partpass' => $this->getPartPassInc(), ] ); if (false !== ($res = $this->db->query($sql))) { return $result; } } return false; } public function booklet() { if (false !== ($tmp = $this->claimInfo())) { $result = array(); $this->defaults['TourInc'] = $tmp['TourInc']; $this->defaults['StateInc'] = $tmp['StateInc']; $methods = array('Visas', 'Insures', 'Services', 'Freights', 'Hotels'); foreach ($methods as $control) { $method = 'claim' . $control; $return = $this->$method(); $return = $this->addPartnerInfo($return); $result[$control] = $return; } $result['Peoples'] = $this->claimPeoples(); $result['Buyer'] = $this->claimBuyer(); return $result; } return false; } public function addPartnerInfo($return) { if (!$return) { return false; } foreach ($return as $idx => $elem) { if (isset($elem['IPartnerInc']) && false !== ($tmp = $this->getPartnerInfo($elem['IPartnerInc']))) { $return[$idx] = array_merge($tmp, $elem); } } return (count($return)) ? $return : false; } public function get_template_booklet() { if (empty($this->defaults['TourInc']) || empty($this->defaults['StateInc']) || empty($this->defaults['OwnerInc'])) { if (false !== ($tmp = $this->claimInfo())) { $this->defaults['TourInc'] = $tmp['TourInc']; $this->defaults['StateInc'] = $tmp['StateInc']; $this->defaults['OwnerInc'] = $tmp['OwnerInc']; } else { return false; } } $res = $this->get_settings_printform($doccategory = 10, $partner = $this->defaults['OwnerInc'], $tour = $this->defaults['TourInc'], $state = $this->defaults['StateInc'], $inszone = null, $contracttype = null, $agreement_year = null, $email_type = null, $online_bank = null, $owner = $this->defaults['OwnerInc']); if ($res) { return true; } return $this->messages['TEMPLATE_NOT_INSTALL']; } public function is_enabled() { $clRefer = Samo_Loader::load_object('Cl_Refer_Model', $this->config); $clRefer->construct(); $documents = $clRefer->documentList(null, null, DocCategory::BOOKLET); if (count($documents)) { $document = reset($documents); $data = $document['data']; if ($data['Enabled'] && !$data['ExternalDocument']) { return true; } } return false; } protected function getExternalDocumentInit() { if ($this->defaults['CLAIM']) { return $this->getExternalDocumentJob(sprintf('booklet_%d.pdf', $this->defaults['CLAIM']), sprintf('booklet_%d_%%s_%%s.pdf', $this->defaults['CLAIM'])); } throw new Samo_Exception($this->messages['CANNOT_PRINT']); } protected function getExternalDocumentParams() { if (false == $this->is_enabled() || true !== $this->get_template_booklet()) { throw new Samo_Exception($this->messages['CANNOT_PRINT']); } $params = array( 'claim' => $this->defaults['CLAIM'], 'template' => $this->defaults['template'] ); return $params; } } 