<?php
 class Bron_Person_Model extends Bron_Model { protected $log_priority = 'bron_person'; public function construct() { if ($this->action != 'contractPreview') { return parent::construct(); } } public function checkAuth($login = null, $wordpassword = null) { $login = null !== $login ? trim($login) : $login; $wordpassword = null !== $wordpassword ? trim($wordpassword) : null; if (null === $login) { $sql = $this->db->formatExec( '<OFFICEDB>.dbo.up_WEB_3_bron_PersonLogin', [ 'LangId' => Samo_Request::langid(), 'UserCode' => $this->internet_user(), ] ); } else { $sql = $this->db->formatExec( '<OFFICEDB>.dbo.up_WEB_3_buyer_inc', [ 'email' => $login, 'passwd' => $wordpassword, 'LangId' => Samo_Request::langid(), 'UserCode' => $this->internet_user(), ] ); } if ((false !== ($auth = $this->db->fetchRow($sql))) && isset($auth['PartPassInc'])) { $auth['ClaimList'] = explode(',', $auth['ClaimList']); $auth['permissions'] = $this->load_permissions($auth['PartPassInc']); return $auth; } return false; } public function check_buyer() { if (isset($_SESSION['samo_auth']['PhysBuyerInc']) && $_SESSION['samo_auth']['PhysBuyerInc']) { return true; } $nonEmpty = array(); if (isset($_POST['claimDocument']['buyer'])) { $nonEmpty = array(); foreach ($_POST['claimDocument']['buyer'] as $field => $value) { $value = trim($value); if ($value) { $nonEmpty[] = $field; } } } return count($nonEmpty) > 0; } public function BUYER() { if (isset($_SESSION['samo_auth']) && isset($_SESSION['samo_auth']['PhysBuyerInc']) && $_SESSION['samo_auth']['PhysBuyerInc'] > 0) { return false; } $buyer = Samo_Loader::load_object('Samo_Buyer', $this->config); if (isset($_SESSION['samo_auth']['BUYER'])) { $buyer->load_from_array($_SESSION['samo_auth']['BUYER']); } return $buyer->load(null); } public function show_agreement() { return false; } protected function _calc($save = 0, & $return, & $errorMessage) { $this->calc_type($this->getConfig('status7', 'bron_person')); return parent::_calc($save, $return, $errorMessage); } public function partner() { $sql = $this->db->formatExec( '<OFFICEDB>.dbo.up_WEB_3_person_Partner', ['UserCode' => $this->internet_user()] ); return $this->db->fetchOne($sql); } public function auth_required() { $return = ['person']; if ((!isset($_SESSION['samo_auth']) || $_SESSION['samo_auth'] === false) && Samo_Request::bitval('GUEST')) { if (false === ($_SESSION['samo_auth'] = $this->checkAuth(null, null))) { $messages = Samo_Registry::get('messages'); throw new Samo_Exception($messages['BROKEN_CONFIG'], 501); } } if (isset($_SESSION['samo_auth']) && $_SESSION['samo_auth']['type'] != 'agency') { $return = [$_SESSION['samo_auth']['type']]; } return $return; } } 