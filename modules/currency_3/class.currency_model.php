<?php
 class Currency_Model extends Samo { private $cache_time = 1800; protected $api_name = 'Currency_Api'; public function construct() { $this->defaults['CURRENCYBASE'] = Samo_Utils::ifs(Samo_Request::intval('CURRENCYBASE'), null); } public function todayRates() { $userCode = $this->internet_user(); $currencies = Samo_Request::get('CURRENCY'); if (null !== $currencies) { $currencies = explode(',', $currencies); foreach ($currencies as $idx => $val) { if (!filter_var($val, FILTER_VALIDATE_INT)) { unset($currencies[$idx]); } else { $currencies[$idx] = intval($val); } } $currencies = implode(',', $currencies); } $params = [ 'Base' => $this->defaults['CURRENCYBASE'], 'Currency' => $currencies, 'UserCode' => $userCode, ]; $cache_key = __METHOD__ . implode('_', $params); if (false === ($return = $this->cache->get($cache_key))) { $sql = $this->db->formatExec('<OFFICEDB>.dbo.up_WEB_4_currency_daily', $params); $_rates = $this->db->fetchAll($sql); $rates = []; foreach ($_rates as $rate) { $rates[$rate['Date']->format('sql')][$rate['CurrencyName']] = $rate; } $return = $this->cache->set($cache_key, $rates, $this->cache_time); } return $return; } public function history() { $api = $this->api(); $api->setParams('CURRENCY', Samo_Request::intval('CURRENCY')); $api->setParams('DATEBEG', Samo_Datetime::parse('-1 month')); $api->setParams('DATEEND', Samo_Datetime::today()); $_rates = $api->getRates(); $rates = array_reverse($_rates); return $rates; } } 