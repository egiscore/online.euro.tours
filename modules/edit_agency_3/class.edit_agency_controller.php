<?php
 class Edit_Agency_Controller extends Samo_Controller { public $model = null; protected function construct() { if (!isset($_SESSION['FLASHMESSAGES'])) { $_SESSION['FLASHMESSAGES'] = array(); } if (isset($_SESSION['FLASHMESSAGES']['EDIT_PARTNER'])) { $this->view->message($_SESSION['FLASHMESSAGES']['EDIT_PARTNER']); unset($_SESSION['FLASHMESSAGES']['EDIT_PARTNER']); } } public function default_action() { $routes = Samo_Registry::get('routes'); $this->view->assign('PERSONAL_AREA', Profile_Model::links()); $logins = $this->model->PartpassList(); if (isset($routes['registration'])) { $this->view->assign('PartnerLogins', $logins); $this->view->assign('PartPassCreate', $this->model->enableCreatePartpass()); } $saveAccess = $this->model->getSaveAccess(); $this->view->assign('MAXLONGINT', Samo::MAXLONGINT) ->assign('fields', $this->model->get_fields_partner()) ->assign( 'point', [ 'latitude' => '55.766326', 'longitude' => '37.6075745', ] ) ->assign('saveAccess', $saveAccess) ->js_var('samo.ownership_self_employed', $this->model->ownership_self_employed()); parent::default_action(); if ($inc = Samo_Request::intval('PARTPASS_NEW')) { if ($_SESSION['samo_auth']['Administrator']) { if ($this->model->partpassInList($logins, $inc)) { $this->model->defaults['PARTPASS_INC'] = $inc; $this->EDIT_PARTPASS(); } else { $this->view->message($this->messages['PARTPASS_NOT_IN_PARTNER'], 'error'); } } else { $this->view->message($this->messages['NOT_ENOUGH_RIGHTS_TO_EDIT'], 'error'); } } else { $enable_request_changes = $this->model->enable_request_changes(); if ($enable_request_changes) { if (!$saveAccess) { $this->REQUEST_CHANGES(); } $this->view->js_call_onready('samo.request_changes'); } } } public function EDIT_PARTPASS() { try { $this->model->EnableSaveEditPartpass(); $login = $this->model->Edit_Partpass(); $this->view ->assign('MAXLONGINT', Samo::MAXLONGINT) ->assign('login', $login) ->assign('fields_partpass', $this->model->get_fields_partpass()) ->assign('show_save_partpass_btn', true) ->popup_template('edit_login.tpl', '', $width = 400, $height = 80) ->js_call_onready('samo.edit_login_prev'); } catch (Samo_Exception $e) { $this->view->error($e->getMessage()); } } public function SAVE_PARTNER() { $messages = $this->messages; try { $message = ''; if (!$this->model->SaveEditPartner()) { $message = 'PARTNER_UPDATE_ERROR'; } if ($message != '') { $this->view->message($messages[$message]); } else { $src = Samo_Request::get('SOURCE'); if (!$src) { $_SESSION['FLASHMESSAGES']['EDIT_PARTNER'] = $messages['PARTNER_UPDATE_COMPLETE']; $routes = Samo_Registry::get('routes'); $src = $routes['edit_agency']['url']; } if ($url = Samo_Url::parse($src)) { $this->view->redirect_to($url); } } } catch (Samo_Exception $e) { $this->view->error($e->getMessage()); } } public function SAVE_LOGIN() { $messages = $this->messages; try { $inc = $this->model->defaults['PARTPASS_INC']; $this->model->EnableSaveEditPartpass(); $res = $this->model->SaveEditPartpass(); $this->view->assign('PartPassCreate', $this->model->enableCreatePartpass()); $this->model->defaults['PARTPASS_INC'] = null; $this->view->assign('PartnerLogins', $this->model->PartpassList()); $this->view->element_update('#PARTPASS_LIST', 'partpass_list.tpl'); $this->view->popup_close(); $this->view->js_call('samo.set_partpass_list_events'); $this->view->message($messages[$inc != $res['PartPassInc'] ? 'SAVE_PASSWORD_OK' : 'SAVE_LOGIN_OK']); } catch (Samo_Exception $e) { switch ($e->getCode()) { case 5: case 6: $this->view->message($e->getMessage()); break; default: $this->view->error($e->getMessage()); } } } public function DELETE_PARTPASS() { try { $res = $this->model->DeletePartpass(); $this->model->defaults['PARTPASS_INC'] = null; $this->view->assign('PartnerLogins', $this->model->PartpassList()); $this->view->assign('PartPassCreate', $this->model->enableCreatePartpass()); $this->view->element_update('#PARTPASS_LIST', 'partpass_list.tpl'); $this->view->js_call('samo.set_partpass_list_events'); if ($res) { $this->view->message($this->messages['DELETE_COMPLETE']); } } catch (Samo_Exception $e) { $this->view->message($e->getMessage(), 'error'); } } public function TOWN() { try { $res = $this->model->METROSTATION(); $this->view->add_options('.PARTNER_METROSTATION', $res); if (count($res) > 1) { $this->view->js_call('samo.renderMetroStation'); $this->view->js_call('samo.enableMetro'); } else { $this->view->remove_class('.PARTNER_METROSTATION', 'required'); } } catch (Samo_Exception $e) { $this->view->popup_message($e->getMessage(), $this->messages['PAGE_TITLE'], 350, 100, true); } } public function REQUEST_CHANGES() { try { $fields = $this->model->notEditableFields(); $this->view->assign('fields', $fields) ->popup_template('request_changes.tpl', $this->messages['PARTNER_REQUEST_CHANGES_TITLE'], $width = 800, $height = 80) ->js_call_onready('samo.request_changes_form'); } catch (Samo_Exception $e) { $this->view->error($e->getMessage()); } } public function SEND_REQUEST() { $fields = $this->model->notEditableFields(); $form = Samo_Request::post('frm'); if (array_key_exists('Partner', $form) && array_key_exists($this->model->defaults['PARTNER'], $form['Partner'])) { $request = $form['Partner'][$this->model->defaults['PARTNER']]; try { $this->model->send_request($request, $fields); $this->view->popup_close() ->popup_message($this->messages['REQUEST_CHANGES_SUCCESS'], $this->messages['PAGE_TITLE'], 800, 80); } catch (Samo_Exception $e) { switch ($e->getCode()) { case 400: $this->view->element_error('#request-changes-frm input:first', $this->messages['PARTNER_REQUEST_EMPTY_CHANGES']); break; case 405: case 500: $msg = (array_key_exists('PARTNER_REQUEST_CHANGES_ERROR_' . $e->getCode(), $this->messages)) ? $this->messages['PARTNER_REQUEST_CHANGES_ERROR_' . $e->getCode()] : $e->getMessage(); $this->view->error($msg); break; default: $this->view->error($e->getMessage()); break; } } } } } 