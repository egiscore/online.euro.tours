<?php
 class Hotel_Stopsale_Api extends Api_Model { public function __construct($callback = null) { $this->field_type['integers'] = array(); parent::__construct($callback); } protected function _getTOWNS() { $return = array(); $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_3_hstop_Townto', [ 'TownFrom' => $this->getParam('TOWNFROMINC'), 'State' => $this->getParam('STATEINC'), 'Order_by_name' => $this->getParam('ORDER_BY_NAME') ] ); $inc = $this->getParam('TOWNTO'); if ($res = $this->db->query($sql)) { while ($row = $this->db->fetchRow($res)) { $return[] = array( 'id' => $row['TownInc'], 'name' => $row['TownLName'], 'nameAlt' => $row['TownName'], 'selected' => $row['TownInc'] == $inc ); } $this->db->freeResult($res); } return $return; } protected function _getHOTELS() { $return = array(); $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_3_hstop_Hotel', [ 'TownFrom' => $this->getParam('TOWNFROMINC'), 'State' => $this->getParam('STATEINC'), 'Town' => $this->getParam('TOWNTO'), 'Market' => $this->getParam('MARKETINC'), 'Order_by_name' => $this->getParam('ORDER_BY_NAME') ] ); $inc = $this->getParam('HOTELINC'); if ($res = $this->db->query($sql)) { while ($row = $this->db->fetchRow($res)) { $return[] = array( 'id' => $row['HotelInc'], 'name' => $row['HotelLName'], 'nameAlt' => $row['HotelName'], 'town' => $row['TownName'], 'star' => $row['StarLName'], 'starAlt' => $row['StarName'], 'starKey' => $row['StarInc'], 'enable' => $row['Enable'], 'selected' => $row['HotelInc'] == $inc ); } $this->db->freeResult($res); } return $return; } protected function _getSTOP_SALES() { $return = array(); $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_4_hstop_List', [ 'TownFrom' => $this->getParam('TOWNFROMINC'), 'State' => $this->getParam('STATEINC'), 'Town' => $this->getParam('TOWNTO'), 'Hotel' => $this->getParam('HOTELINC'), 'Market' => $this->getParam('MARKETINC'), 'Order_by_name' => $this->getParam('ORDER_BY_NAME') ] ); if ($res = $this->db->query($sql)) { while ($row = $this->db->fetchRow($res)) { $return[] = array( 'id' => (int)$row['Inc'], 'type' => $row['zaezd'], 'dateBeg' => $row['DateBeg'], 'dateEnd' => $row['DateEnd'], 'rdatebeg' => $row['RDateBeg'], 'rdateend' => $row['RDateEnd'], 'spo' => $row['FullNumber'], 'hotel' => $row['HotelLName'], 'hotelAlt' => $row['HotelName'], 'hotelKey' => (int)$row['HotelInc'], 'hotelUrl' => Samo_Url::parse($row['WWW']), 'nights' => $row['nights'], 'room' => $row['RoomLName'], 'roomAlt' => $row['RoomName'], 'htPlace' => $row['HtplaceLName'], 'htPlaceAlt' => $row['HtplaceName'], 'meal' => $row['MealLName'], 'mealAlt' => $row['MealName'], 'mealKey' => $row['MealInc'], 'partner' => $row['PartnerLName'], 'partnerAlt' => $row['PartnerName'], 'programType' => $row['PTypeLName'], 'programTypeAlt' => $row['PTypeName'], 'note' => $row['Note'], 'town' => $row['TownName'], 'starAlt' => $row['starAlt'], 'enable' => $row['Enable'], ); } $this->db->freeResult($res); } return $return; } protected function _getALL() { $result = []; foreach (['TOWNFROMS', 'STATES', 'TOWNS', 'HOTELS'] as $datatype) { $method = '_get' . $datatype; if (method_exists($this, $method)) { $result[$datatype] = $this->$method(); } } return $result; } public function setParams($params = array(), $value = null) { $params = array_filter($params); $return = $this->defaults; if (is_string($params) && !empty($params) && null !== $value) { $return = $this->defaults[$params] = $value; } elseif (is_array($params)) { $return = $this->defaults = array_merge($this->defaults, $params); } return $return; } } 