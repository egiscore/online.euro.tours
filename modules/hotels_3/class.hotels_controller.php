<?php
 class Hotels_Controller extends Samo_Controller { protected $chlb_controls = null; public function __construct() { $this->actions = [ 'INIT' => ['STATEINC', 'REGIONINC', 'TOWNTO', 'CATEGORY', 'PARAMS', 'ROOM'], 'STATEINC' => ['REGIONINC', 'TOWNTO', 'CATEGORY', 'PARAMS'], 'REGIONINC' => ['TOWNTO', 'CATEGORY', 'PARAMS'], ]; $this->embeddable = array_merge(['default_action', 'SEARCH', 'state', 'region', 'town', 'hotel'], $this->actions['INIT']); parent::__construct(); } public function construct() { $this->chlb_controls = ['CATEGORY', 'PARAMS']; $this->persistent = ['STATEINC', 'REGIONINC']; } public function default_action() { $this->default_app_env(); foreach ($this->actions['INIT'] as $control) { $res[$control] = $this->model->loadData($control); } if (!empty($res['PARAMS'])) { $res['VIPTYPE'] = $this->model->filterKnownHotelTypes($res['PARAMS']); } $this->setSearchResult(); $this->view->bulk_assign($res)->render('search'); } public function samo_action($action) { if (!isset($this->actions[$action])) { Samo_Registry::get('response')->not_found(); } foreach ($this->actions[$action] as $control) { $result = $this->model->loadData($control); if ($control == 'PARAMS') { $hotel_types = $this->model->filterKnownHotelTypes($result); $this->view->checklistbox_update($control, $result, 'controls.tpl'); if (!empty($hotel_types)) { $this->view->checklistbox_update('VIPTYPE', $hotel_types); } } elseif (in_array($control, $this->chlb_controls)) { $this->view->checklistbox_update($control, $result); } else { $this->view->add_options($control, $result); } } $this->setSearchResult(); $this->view->element_update('resultset', 'resultset.tpl'); $this->view->js_call_if_exists('samo.hotels.prepareBlocks'); } public function hotel() { $this->default_app_env(); if ($hotel = $this->model->hotels()) { if (!empty($hotel['params']['data'])) { $groups = $_groups = []; foreach ($hotel['params']['data'] as $key => $row) { $group_inc = $row['group_inc']; if (!isset($groups[$group_inc])) { $groups[$row['group_inc']] = [ 'inc' => $row['group_inc'], 'name' => $row['group'], 'lname' => $row['lgroup'], 'data' => [], ]; } $groups[$group_inc]['data'][$key] = $row; $_groups[$group_inc] = (isset($_groups[$group_inc]) ? $_groups[$group_inc] : 0) + ($row['value'] == '+' ? strlen($row['title']) : strlen($row['value'])); } foreach ($groups as $key => $row) { $groups[$key]['grouped'] = count($row['data']) < 4 && $_groups[$key] / count($row['data']) < 100; } $hotel['params']['data'] = $groups; } $this->view->assign('hotel', $hotel); $this->model->defaults['STATEINC'] = $hotel['stateKey']; $price = $this->model->price(); if (false !== ($currency = $price->loadData('CURRENCY')) && false !== ($checkin = $price->loadData('CHECKIN_BEG'))) { $view = $this->view; $res = []; foreach (['NIGHTS_FROM', 'NIGHTS_TILL'] as $control) { $price->defaults['EXISTS_' . $control] = null; $res[$control] = $price->loadData($control); if (!$price->defaults['EXISTS_' . $control]) { $view->add_class('.' . $control, 'blink'); } } $view->assign('checkin', $checkin) ->assign('NIGHTS_FROM', $res['NIGHTS_FROM']) ->assign('NIGHTS_TILL', $res['NIGHTS_TILL']) ->assign('CURRENCY', $currency) ->js_var('samo.CROSS_RATES', $price->getCurrencyRates()); } } if ($rooms = $this->model->roomsInHotel()) { $this->view->assign('ROOMS', $rooms); } $this->view->assign('SHOW_ROOMS', $this->model->showRooms()); $this->view ->assign('TOWNFROMINC', $this->model->getTOWNFROMINC()) ->render('layout'); } private function getPrices() { $view = $this->view; if (!($hotel = $view->get_template_vars('hotel'))) { $hotel = $this->model->hotels(); } $result = []; if ($hotel) { $price = $this->model->price(); $price->defaults['STATEINC'] = $hotel['stateKey']; $price->defaults['CHECKIN_END'] = $price->defaults['CHECKIN_BEG']; if (false !== ($result = $price->getPrices())) { $view->assign('nights', $price->nights()); } } $view->assign('prices', $result)->assign('townFrom', $this->model->townFrom())->assign('state', $this->model->state()); } public function PRICE() { $this->getPrices(); if (false !== ($checkin = $this->model->price()->loadData('CHECKIN_BEG'))) { $this->view->js_call_if_exists('samo.hotels.reDatePicker', 'CHECKIN', $checkin['validDates'], $checkin['startDate']->format(), $checkin['value']->format()); } $this->view->element_update('resultset', 'prices.tpl'); return true; } private function _param($method) { if ($result = $this->model->$method()) { $this->view->assign('param', $result)->popup_template('param.tpl', $result['title']); } } public function param() { $this->_param('param'); } public function meal() { $this->_param('meal'); } public function state() { $this->default_app_env(); if ($result = $this->model->states()) { $this->model->defaults['STATEINC'] = $result['StateInc']; $this->model->defaults['REGIONINC'] = null; $this->setSearchResult(false); $this->view->assign('state', $result) ->assign('regions', $this->model->region_list()) ->render('state'); } else { $this->view->render('not_found'); } } public function region() { $this->default_app_env(); if ($result = $this->model->regions()) { $this->model->defaults['STATEINC'] = $result['StateInc']; $this->model->defaults['REGIONINC'] = $result['RegionInc']; $this->setSearchResult(false); $this->view->assign('region', $result) ->assign('towns', $this->model->town_list()) ->render('region'); } else { $this->view->render('not_found'); } } public function town() { $this->default_app_env(); if ($result = $this->model->towns()) { $this->setSearchResult(false); $this->view->assign('town', $result)->render('town'); } else { $this->view->render('not_found'); } } public function info() { if ($result = $this->model->hotels()) { $this->view->assign('hotel', $result); $this->view->js_var('samo.listHotels[' . $result['key'] . ']', $this->view->fetch('popup.tpl')); } elseif ($inc = Samo_Request::intval('HOTELINC')) { $this->view->js_var('samo.listHotels[' . $inc . ']', false); } } public function SEARCH() { $this->setSearchResult(); $this->view->element_update('resultset', 'resultset.tpl'); } private function setSearchResult($route = true) { $search = $this->model->search(); if ($route) { $routes = Samo_Registry::get('routes'); } $pages = null; $listHotels = []; foreach ($search as $row) { if (is_null($pages)) { $pages = ceil($row['total'] / $this->model->rowOnPage); } if ($row['more']) { $this->view->assign('hotel', $row); $listHotels[$row['key']] = $this->view->fetch('popup.tpl'); } } $this->view->assign('hotels', $search) ->assign('pages', $this->model->getPages($pages)) ->assign('current_page', $this->model->defaults['PAGE']) ->js_var('samo.listHotels', $listHotels) ->assign('searchTour', isset($routes['search_tour'])); } protected function _logon_popup_close() { if ('embed' == $this->action && Samo_Request::get('is_js') && Samo_Request::get('antibot')) { Samo_Registry::get('response')->refresh(); } else { parent::_logon_popup_close(); } } } 