<?php
class Liqpay_Model extends Samo_Acquiring { protected $moduleName = 'liqpay'; public function __construct() { parent::__construct(); $this->bankInc = $this->acquiringConfig('LIQPAY_SAMO_INC'); $this->bankAlias = $this->acquiringConfig('LIQPAY_SAMO_ALIAS'); if (null == $this->bankInc) { throw new Samo_Exception(get_called_class() . ' was not configured', 501); } } public function getHiddenFields() { return [ 'data' => '', 'signature' => '' ]; } public function getFormAction() { return LiqPay::PAY_URL; } public function makeFormData() { $lp = Samo_Loader::load_object('LiqPay', $this->acquiringConfig('LIQPAY_PUBLIC_KEY'), $this->acquiringConfig('LIQPAY_PRIVATE_KEY')); $invoice = $this->getInvoice(); $inumber = $this->encodeOrderID($invoice['inumber']); return $lp->getRequestData($this->_amount, $this->acquiringConfig('LIQPAY_CURRENCY'), $this->getDescription(), $inumber, $this->getClientURL(), $this->getAdvParams()); } public static function parseCallbackNotify($data) { $res = 'fail'; try { $lp = Samo_Loader::load_object('LiqPay', static::acquiringConfig('LIQPAY_PUBLIC_KEY'), static::acquiringConfig('LIQPAY_PRIVATE_KEY')); $data = $lp->parseStatusInfo($data['data'], $data['signature']); $inumber = static::decodeOrderID($data['order_id']); if ($inumber && $data['status']) { switch ($data['status']) { case 'success': self::confirmOrder(static::acquiringConfig('LIQPAY_SAMO_ALIAS'), $inumber); $res = 'ok'; break; default: break; } } } catch (Exception $e) { $e = $e; } echo $res; } protected function getDescription() { return 'Pay for claim N'.$this->_claim; } protected function encodeOrderID($inumber) { return $inumber; } protected static function decodeOrderID($orderID) { return $orderID; } protected function getAdvParams() { return []; } } 