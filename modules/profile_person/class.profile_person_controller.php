<?php
 class Profile_Person_Controller extends Samo_Controller { public function construct() { $this->is_embedable = false; } public function default_action() { $this->auth_init(); if (isset($_SESSION['flash'])) { $this->view->assign('flash', $_SESSION['flash']); unset($_SESSION['flash']); } elseif (isset($_SESSION['errors'])) { $this->view->assign('errors', $_SESSION['errors']); unset($_SESSION['errors']); } else { $this->view->redirect_to(Samo_Url::route('profile_person', ['samo_action' => 'recovery_password'])); } parent::default_action(); } public function RECOVERY_PASSWORD() { $this->default_app_env(); $this->view ->render('recovery'); } public function SEARCH_PERSON() { $response = Samo_Registry::get('response'); $email = Samo_Request::email('search'); try { if ($this->model->request_change_password($email)) { $output = $this->messages['RECOVERY_PASSWORD_CONFIRM_MAIL']; if ($response->respond_to_js()) { $this->view->element_text('#profile_person .container', $output)->add_class('#profile_person .container', 'note'); } else { $this->view ->assign('message', $output) ->render('recovery'); } } } catch (Samo_Exception $e) { $this->view->error($e->getMessage()); } } public function CONFIRM_EMAIL() { $this->auth_init(); if (!isset($_SESSION['params'])) { return $this->view->redirect_to(Samo_Url::route('profile_person', ['samo_action' => 'recovery_password'])); } $this->default_app_env(); try { $email = isset($_SESSION['params']['email']) ? $_SESSION['params']['email'] : null; $result = $this->model->search_person($email); if (1 == count($result)) { $user = reset($result); if ($this->model->change_password($user['BuyerInc'])) { $message = sprintf($this->messages['RECOVERY_PASSWORD_SUCCESS'], $user['Email']); $_SESSION['flash'][] = $message; } else { throw new Samo_Exception($this->messages['RECOVERY_PASSWORD_COMMON_ERROR'], 500); } } else { throw new Samo_Exception('User not found. Contact touroperator.', 500); } } catch (Samo_Exception $e) { $_SESSION['errors'][] = $e->getMessage(); } $this->view->redirect_to(Samo_Url::route('profile_person')); } public function LOGOUT() { $this->auth_init(); $_SESSION = []; $format = Samo_Utils::ifs(Samo_Request::strval('format'), 'html'); $response = Samo_Registry::get('response'); switch ($format) { case 'js': $response->respond_to('js-api'); $callback = Samo_Utils::ifs(Samo_Request::strval('callback'), 'void'); $this->view->json_output(true, $callback); break; case 'image': $response->respond_to('gif'); $response->output(base64_decode("R0lGODlhAQABAIAAAP///wAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==")); break; default: $response->refresh(); break; } } } 