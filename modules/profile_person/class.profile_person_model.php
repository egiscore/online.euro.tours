<?php
 class Profile_Person_Model extends Samo { const MAIL_CHANGE_PASSWORD_REQUEST = 41; public function search_person($mail) { $email = Samo_Validate::email($mail) ? $mail : null; if (!$email) { return false; } $sql = $this->db->formatExec('<OFFICEDB>.dbo.up_WEB_3_search_buyer', ['Email' => $email,]); $rows = $this->db->fetchAll($sql); return $rows; } public function confirm_email($params) { if (!isset($params['ip'])) { $params['ip'] = Samo_Request::remote_addr(); } $sql = $this->db->formatExec( '<OFFICEDB>.dbo.up_WEB_3_online_link', [ 'Entity' => 'CONFIRM_EMAIL_PERSON', 'User' => $this->internet_user(), 'Params' => http_build_query($params), 'Ttl' => 86400, ] ); $url = $this->db->fetchOne($sql); return $url; } public function request_change_password($email) { $messages = Samo_Registry::get('messages'); $result = $this->search_person($email); if (false !== $result && 1 == count($result)) { $params = [ 'email' => $email, ]; if ($link = $this->confirm_email($params)) { $params['link'] = $link; return $this->samotourMail(self::MAIL_CHANGE_PASSWORD_REQUEST, $params, $email); } throw new Samo_Exception($messages['RECOVERY_PASSWORD_CONFIRMATION_ERROR'], 501); } else { throw new Samo_Exception($messages['RECOVERY_PASSWORD_ACCOUNT_NOT_FOUND'], 404); } } public function change_password($buyer) { $password = Samo_Utils::generatePassword(); $sql = $this->db->formatExec( '<OFFICEDB>.dbo.up_WEB_3_buyer_password', [ 'Inc' => $buyer, 'Password' => $password, 'UserCode' => $this->internet_user(), ] ); if (false !== ($res = $this->db->query($sql))) { $mailItem = $this->db->fetchOne($res); $result = $this->db->fetchOne($res); return $result == 0; } return false; } } 