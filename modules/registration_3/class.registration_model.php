<?php
 class Registration_Model extends Samo_Partner { public function construct() { parent:: construct(); $this->PARTNER_TOWN = $this->defaults['FIRM_TOWN'] = Samo_Utils::ifs(Samo_Request::intval('FIRM_TOWN'), null); $this->defaults['FIRM_PHONE'] = Samo_Utils::ifs(Samo_Request::get('FIRM_PHONE'), null); $this->defaults['FIRM_NAME'] = Samo_Utils::ifs(Samo_Request::get('FIRM_NAME'), null); $this->defaults['FIRM_EMAIL'] = Samo_Utils::ifs(Samo_Request::get('FIRM_EMAIL'), null); $this->defaults['FIRM_NDOG'] = Samo_Utils::ifs(Samo_Request::get('FIRM_NDOG'), null); $this->defaults['FIRM_INN'] = Samo_Utils::ifs(Samo_Request::get('FIRM_INN'), null); } public function getNewPartner() { return (isset($_SESSION['get_new_partpass_partner'])) ? $_SESSION['get_new_partpass_partner'] : 0; } public function getFIRM_TOWN() { return $this->defaults['FIRM_TOWN'] = $this->PARTNER_TOWN(); } public function findAgency() { $sql = $this->db->formatExec( '<OFFICEDB>.dbo.up_WEB_3_reg_SearchPartner', [ 'Town' => $this->defaults['FIRM_TOWN'], 'Phone' => $this->defaults['FIRM_PHONE'], 'FindFullPhone' => 1, 'FirmName' => $this->defaults['FIRM_NAME'], 'Email' => $this->defaults['FIRM_EMAIL'], 'ContrNumber' => $this->defaults['FIRM_NDOG'], 'Inn' => $this->defaults['FIRM_INN'], ] ); return $this->db->fetchAll($sql); } public function is_send_to_administrator($res) { $return = false; if (isset($res['PartPassInc'])) { $partpass_inc = $res['PartPassInc']; foreach ($this->fields_partpass as &$fgroup) { foreach ($fgroup as &$field) { $field['Editable'] = 0; $field['Value'] = $field['new_value']; } } $params = array( 'inc' => $partpass_inc, 'partner' => $this->defaults['PARTNER'], 'link' => Samo_Url::route('edit_agency', ['PARTPASS_NEW' => $partpass_inc]), ); $return = $this->samotourMail(Samo_Partner::MAIL_NEW_PARTPASS_ADMIN, $params); } return $return; } public function is_enabled() { $sql = $this->db->formatExec( '<OFFICEDB>.dbo.up_WEB_3_reg_PartPass', [ 'Partner' => $this->getNewPartner(), ] ); $numLogins = $this->db->fetchOne($sql); return ($numLogins < $this->MAX_LOGINS_FOR_AGENCY); } public function SaveEditPartpass() { $this->defaults['PARTNER'] = $this->getNewPartner(); $this->defaults['AUTHORPARTPASSINC'] = null; return parent::SaveEditPartpass(); } public function createSql_SaveEditPartpass() { if (isset($_SESSION['have_administrator']) && $_SESSION['have_administrator']) { foreach ($this->fields_partpass as &$fgroup) { foreach ($fgroup as &$field) { if ($field['Field'] == 'PARTPASS_ONLINE_ACCESS') { $field['new_value'] = 0; } } } $this->defaults['PARTPASS_ONLINE_ACCESS'] = '0'; } return parent::createSql_SaveEditPartpass(); } public function searchRun() { $messages = (object)Samo_Registry::get('messages'); if (!($agency = $this->findAgency())) { throw new Samo_Exception($messages->NO_DATA, 1); } if (count($agency) > 1) { throw new Samo_Exception($messages->RES_MORE_AGENCY, 2); } $agency = (object)array_shift($agency); if (!$agency->internet) { throw new Samo_Exception($messages->RES_NO_INTERNET_ACCESS, 3); } if ($agency->Black && !$this->getConfig('ALLOWED_BLACK_LIST', 'registration')) { throw new Samo_Exception($messages->RES_BLACK_PARTNER, 4); } if (!$this->checkContract($agency->PartnerInc)) { throw new Samo_Exception($messages->NO_CONTRACTS, 5); } $_SESSION['get_new_partpass_partner'] = $agency->PartnerInc; $_SESSION['have_administrator'] = $agency->have_administrator; $_SESSION['administrator_email'] = $agency->administrator_email; return [(array)$agency]; } public function get_fields_partpass() { if (false !== ($result = parent::get_fields_partpass())) { foreach ($result as &$fields) { foreach ($fields as &$field) { if ($field['Field'] == 'PARTPASS_ONLINE_ACCESS') { $field['Visible'] = 0; } } } } return $result; } } 