<?php
 class Schedule_doc_Model extends Samo_Tourinfo { protected $checkin = null; public function construct() { parent::construct(); $this->defaults['OWNERINC'] = Samo_Request::intval('OWNERINC'); $today = Samo_Datetime::today(); $this->checkin = Samo_Utils::ifs(Samo_Request::date('CHECKIN', $today, Samo_Datetime::parse('+2 year')), $today); } public function schedule_doc() { $result = array(); $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_3_schedule_List', [ 'TownFrom' => $this->defaults['TOWNFROMINC'], 'State' => $this->defaults['STATEINC'], 'Owner' => $this->defaults['OWNERINC'], 'DateBeg' => $this->checkin, ] ); if (false !== ($res = $this->db->query($sql))) { while (false !== ($row = $this->db->fetchRow($res))) { $day_delta = ((intval($row['TrgTime']) - intval($row['SrcTime'])) < 0) ? 1 : 0; $row['SrcTimeDelta'] = $row['delay']; $tmp = (int)$row['delay'] + (int)$row['days']; $row['TrgTimeDelta'] = ($tmp) ? $tmp : $day_delta; $result[] = $row; } } return $result; } public function getTOWNFROMINC() { $return = array(); $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_3_schedule_Townfrom', ['Order_By_Name' => $this->getConfig('ORDER_BY_NAME'),] ); $towns = Samo_Utils::ifs($this->db->fetchAll($sql), array()); $selected_exists = false; foreach ($towns as $town) { $selected = false; if ($town['TownInc'] == $this->townFrom()) { $selected = true; $selected_exists = true; } $item = array( 'Name' => $town['TownName'], 'LName' => $town['TownLName'], 'altName' => $town['TownAltName'], 'Inc' => $town['TownInc'], 'selected' => $selected, ); $return[] = $item; } if (!$selected_exists) { $return = array_merge(array(array('Name' => str_repeat('-', 10), 'LName' => str_repeat('-', 10), 'Inc' => 0, 'selected' => false)), $return); } return $return; } public function getSTATEINC() { $return = array(); $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_3_schedule_State', [ 'TownFrom' => $this->defaults['TOWNFROMINC'], 'Order_By_Name' => $this->getConfig('ORDER_BY_NAME'), ] ); $res = Samo_Utils::ifs($this->db->fetchAll($sql), array()); $selected_exists = false; foreach ($res as $row) { $selected = false; if ($row['Inc'] == $this->state()) { $selected = true; $selected_exists = true; } $row['selected'] = $selected; $row['attributes'] = ['data-search-string' => "{$row['LName']} {$row['altName']}"]; $return[] = $row; } if (!$selected_exists) { $return = array_merge(array(array('Name' => str_repeat('-', 10), 'LName' => str_repeat('-', 10), 'Inc' => 0, 'selected' => false)), $return); } return $return; } public function getOWNERINC() { $return = array(); $return[] = array('Name' => str_repeat('-', 10), 'LName' => str_repeat('-', 10), 'Inc' => 0, 'selected' => false); $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_3_schedule_Owner', [ 'TownFrom' => $this->defaults['TOWNFROMINC'], 'State' => $this->defaults['STATEINC'], 'Order_By_Name' => $this->getConfig('ORDER_BY_NAME'), ] ); $res = Samo_Utils::ifs($this->db->fetchAll($sql), array()); foreach ($res as $row) { $selected = false; if ($row['Inc'] == $this->defaults['OWNERINC']) { $selected = true; } $row['selected'] = $selected; $row['attributes'] = ['data-search-string' => "{$row['LName']} {$row['altName']}"]; $return[] = $row; } return $return; } } 