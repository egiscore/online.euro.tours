<?php
 class The_Best_Api extends Search_Api { public function __construct($callback = null) { $this->field_type['integers'] = array(); parent::__construct($callback); } protected function _getSTATES($orderByName = null) { $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_2_best_State', [ 'TownFrom' => $this->townFrom(), 'Order_By_Name' => $this->getConfig('STATE_ORDER_BY_NAME'), ] ); $return = $this->stateinc($sql); return $return; } protected function stateinc($sql) { $return = array(); $default = isset($this->defaults['STATEINC']) ? $this->defaults['STATEINC'] : null; $order_by = ($this->getConfig('STATE_ORDER_BY_NAME')) ? 'Name' : 'LName'; $selected_exists = false; if ($res = $this->db->query($sql)) { while ($row = $this->db->fetchRow($res)) { if (!$selected_exists) { $selected_exists = $row['selected'] = ($row['StateInc'] == $default); } else { $row['selected'] = false; } $row['id'] = $row['StateInc']; $row['name'] = $row['StateName']; $row['nameAlt'] = $row['State' . $order_by]; unset($row['StateInc'], $row['StateName'], $row['StateLName']); $return[] = $row; } if (!$selected_exists && count($return) >= 2) { $return[1]['selected'] = true; $this->state($return[1]['id']); } } return $return; } protected function _getTOWNS() { $return = array(); $default = isset($this->defaults['TOWNTOINC']) ? $this->defaults['TOWNTOINC'] : null; $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_2_best_Townto', [ 'TownFrom' => $this->townFrom(), 'State' => $this->state(), 'Order_By_Name' => $this->getConfig('ORDER_BY_NAME'), ] ); if (false !== ($res = $this->db->query($sql))) { $numRows = $this->db->numRows($res); if ($numRows > 0) { while ($row = $this->db->fetchRow($res)) { $row['id'] = $row['TownInc']; $row['name'] = $row['TownLName']; $row['nameAlt'] = $row['TownName']; $row['selected'] = ($row['TownInc'] == $default || $numRows == 1); unset($row['TownInc'], $row['TownName'], $row['TownLName']); $return[] = $row; } } $this->db->freeResult($res); } return (count($return)) ? $return : false; } protected function _getSTARS() { $return = array(); $default = isset($this->defaults['GROUPSTARINC']) ? $this->defaults['GROUPSTARINC'] : null; $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_2_best_GroupStar', [ 'TownFrom' => $this->townFrom(), 'State' => $this->state(), 'Order_By_Name' => $this->getConfig('ORDER_BY_NAME'), ] ); if (false !== ($res = $this->db->query($sql))) { $numRows = $this->db->numRows($res); if ($numRows > 0) { while ($row = $this->db->fetchRow($res)) { $row['id'] = $row['GroupStarInc']; $row['name'] = $row['Name']; $row['nameAlt'] = $row['Name']; $row['selected'] = ($row['GroupStarInc'] == $default || $numRows == 1); unset($row['GroupStarInc'], $row['Name'], $row['Name']); $return[] = $row; } } $this->db->freeResult($res); } return (count($return)) ? $return : false; } protected function _getPRICES($costfix = true) { $townto = isset($this->defaults['TOWNTOINC']) ? $this->defaults['TOWNTOINC'] : null; $filter = isset($this->defaults['FILTER']) ? $this->defaults['FILTER'] : null; $groupstar = isset($this->defaults['GROUPSTARINC']) ? $this->defaults['GROUPSTARINC'] : null; $hoteltypes = isset($this->defaults['HOTELTYPES']) ? $this->defaults['HOTELTYPES'] : null; if (!is_null($hoteltypes)) { $hoteltypes = explode(',', $hoteltypes); foreach ($hoteltypes as $idx => $inc) { if (!intval($inc)) { unset($hoteltypes[$idx]); } } $hoteltypes = implode(',', $hoteltypes); } else { $hoteltypes = null; } $sql = $this->db->formatExec( '<ONLINEDB>.dbo.up_WEB_4_best_List', [ 'TownFrom' => $this->townFrom(), 'State' => $this->state(), 'TownTo' => $townto, 'Filter' => $filter, 'GroupStar' => $groupstar, 'HotelTypes' => $hoteltypes, 'UserCode' => $this->internet_user(), 'CatalogDB' => $this->CATALOGDB, ] ); $return = $this->db->fetchAll($sql, array($this, 'data_convert')); return $return; } public function data_convert($row) { $show_old_price = (bool)$this->config('SHOW_OLD_PRICE', 'online_config'); $use_hotel_nights = (bool)$this->config('SEARCH_BY_HOTEL_NIGHTS', 'online_config', 0); $price = isset($row['Price']) ? $row['Price'] : null; $priceOld = isset($row['PriceOld']) ? $row['PriceOld'] : null; $row['ConvertedPrice'] = $this->convertPrice($row['Price'], $row['currencyInc'], $this->currency(), $row['currencyAlias']); $row['searchUrl'] = Samo_Url::route( Samo::TOWNFROMHOTELINC == $this->townFrom() ? 'search_hotel' : 'search_tour', [ 'TOWNFROMINC' => $this->townFrom(), 'STATEINC' => $this->state(), 'TOURINC' => $row['TourInc'], 'DOLOAD' => 1, 'HOTELS' => $row['HotelInc'], 'CHECKIN_BEG' => $row['CheckIn']->format('sql'), 'CHECKIN_END' => $row['CheckIn']->format('sql'), 'NIGHTS_FROM' => $use_hotel_nights ? $row['HNights'] : $row['Nights'], 'NIGHTS_TILL' => $use_hotel_nights ? $row['HNights'] : $row['Nights'], 'ADULT' => $row['Adult'], 'CHILD' => $row['Child'], 'PACKET' => $row['Packet_Type'], ] ); $currency = $this->currency(); $result = array( 'id' => isset($row['Cat_Claim']) ? $row['Cat_Claim'] : null, 'claim' => null, 'checkIn' => isset($row['CheckIn']) ? $row['CheckIn'] : null, 'checkOut' => isset($row['CheckOut']) ? $row['CheckOut'] : null, 'nights' => isset($row['Nights']) ? $row['Nights'] : null, 'hnights' => isset($row['HNights']) ? $row['HNights'] : null, 'adult' => isset($row['Adult']) ? $row['Adult'] : null, 'child' => isset($row['Child']) ? $row['Child'] : null, 'tour' => isset($row['TourLName']) ? $row['TourLName'] : null, 'tourAlt' => isset($row['TourName']) ? $row['TourName'] : null, 'tourKey' => isset($row['TourInc']) ? $row['TourInc'] : null, 'tourRequest' => isset($row['TourRequest']) ? $row['TourRequest'] : null, 'tourUrl' => isset($row['TourUrl']) ? $row['TourUrl'] : null, 'programType' => isset($row['ProgramTypeName']) ? $row['ProgramTypeName'] : null, 'programTypeAlt' => isset($row['ProgramTypeLName']) ? $row['ProgramTypeLName'] : null, 'programTypeKey' => isset($row['ProgramTypeInc']) ? $row['ProgramTypeInc'] : null, 'programTypeUrl' => isset($row['ProgramTypeUrl']) ? $row['ProgramTypeUrl'] : null, 'programTypeOld' => isset($row['ProgramTypeOldName']) ? $row['ProgramTypeOldName'] : null, 'programTypeOldAlt' => isset($row['ProgramTypeOldLName']) ? $row['ProgramTypeOldLName'] : null, 'programTypeOldKey' => isset($row['ProgramTypeOldInc']) ? $row['ProgramTypeOldInc'] : null, 'programTypeOldUrl' => isset($row['ProgramTypeOldUrl']) ? $row['ProgramTypeOldUrl'] : null, 'partnerIncoming' => isset($row['PartnerIncomingLName']) ? $row['PartnerIncomingLName'] : null, 'partnerIncomingAlt' => isset($row['PartnerIncomingName']) ? $row['PartnerIncomingName'] : null, 'partnerIncomingKey' => isset($row['PartnerIncomingInc']) ? $row['PartnerIncomingInc'] : null, 'town' => isset($row['HotelTownLName']) ? $row['HotelTownLName'] : null, 'townAlt' => isset($row['HotelTownName']) ? $row['HotelTownName'] : null, 'townKey' => isset($row['TownInc']) ? $row['TownInc'] : null, 'hotel' => isset($row['HotelLName']) ? $row['HotelLName'] : null, 'hotelAlt' => isset($row['HotelName']) ? $row['HotelName'] : null, 'hotelKey' => isset($row['HotelInc']) ? $row['HotelInc'] : null, 'star' => isset($row['StarLName']) ? $row['StarLName'] : null, 'starAlt' => isset($row['StarName']) ? $row['StarName'] : null, 'starKey' => isset($row['StarInc']) ? $row['StarInc'] : null, 'meal' => isset($row['MealLName']) ? $row['MealLName'] : null, 'mealAlt' => isset($row['MealName']) ? $row['MealName'] : null, 'mealKey' => isset($row['MealInc']) ? $row['MealInc'] : null, 'mealNote' => isset($row['MealNote']) ? $row['MealNote'] : null, 'mealUrl' => isset($row['MealUrl']) ? $row['MealUrl'] : null, 'room' => isset($row['RoomLName']) ? $row['RoomLName'] : null, 'roomAlt' => isset($row['RoomName']) ? $row['RoomName'] : null, 'roomKey' => isset($row['RoomInc']) ? $row['RoomInc'] : null, 'htPlace' => isset($row['HtPlaceLName']) ? $row['HtPlaceLName'] : null, 'htPlaceAlt' => isset($row['HtPlaceName']) ? $row['HtPlaceName'] : null, 'htPlaceKey' => isset($row['HtPlaceInc']) ? $row['HtPlaceInc'] : null, 'priceOld' => isset($row['PriceOld']) ? $row['PriceOld'] : null, 'price' => isset($row['Price']) ? $row['Price'] : null, 'currency' => isset($row['currencyAlias']) ? $row['currencyAlias'] : null, 'currencyKey' => isset($row['currencyInc']) ? $row['currencyInc'] : null, 'convertedPriceOld' => ($show_old_price && $price < $priceOld) ? $this->convertPrice($priceOld, $row['currencyInc'], $currency, $row['currencyAlias']) : null, 'convertedPrice' => $this->convertPrice($price, $row['currencyInc'], $currency, $row['currencyAlias']), 'convertedCurrencyKey' => $currency, 'spo' => isset($row['FullNumber']) ? $row['FullNumber'] : null, 'spoKey' => isset($row['Spog']) ? $row['Spog'] : null, 'spoNote' => isset($row['SpogNote']) ? $row['SpogNote'] : null, 'spoValid' => isset($row['ValidDate']) ? $row['ValidDate'] : null, 'spoDateEnd' => isset($row['SpogDateEnd']) ? $row['SpogDateEnd'] : null, 'packetType' => isset($row['Packet_Type']) ? $row['Packet_Type'] : null, 'hotelUrl' => isset($row['WWW']) ? Samo_Url::parse($row['WWW']) : null, 'crossTour' => isset($row['CrossTour']) ? $row['CrossTour'] : null, 'townFromKey' => $this->getParam('TOWNFROMINC'), 'stateKey' => isset($row['StateInc']) ? $row['StateInc'] : null, 'searchUrl' => $row['searchUrl'], ); return $result; } protected function _getALL() { $result = array(); foreach (array( 'TOWNS', 'STARS', 'CURRENCIES', ) as $row) { $method = '_get' . $row; if (method_exists($this, $method)) { $result[$row] = $this->$method(); } } return $result; } } 