<?php
 class Tickets_Controller extends Samo_Controller { public function __construct() { $this->actions = array( 'INIT' => array('TOWNFROMINC', 'TOWNTOINC', 'AIRLINES', 'CHECKIN', 'CHECKOUT', 'CLASS', 'ADULT', 'CHILD', 'CURRENCY', 'CHECKIN_DELTA', 'CHECKOUT_DELTA'), 'TOWNFROMINC' => array('TOWNTOINC', 'AIRLINES', 'CHECKIN', 'CHECKOUT', 'CURRENCY'), 'TOWNTOINC' => array('AIRLINES', 'CHECKIN', 'CHECKOUT', 'CURRENCY'), ); parent::__construct(); } public function construct() { $this->persistent = array('TOWNFROMINC'); } public function before_output() { parent::before_output(); if ($response = Samo_Registry::get('response')) { $cookie_path = defined('COOKIE_PATH') ? COOKIE_PATH : WWWROOT; foreach (array('PORTFROMINC', 'TOWNTOINC', 'PORTTOINC') as $control) { $response->save_pref('pt' . $control, $this->model->defaults[$control], $cookie_path); } } } public function default_action() { $res = array(); $this->model->defaults['ADULT'] = Samo_Utils::ifs(Samo_Request::intval('ADULT'), 1); foreach ($this->actions['INIT'] as $control) { $result = $this->model->loadData($control); if (0 == $this->model->defaults['FREIGHTBACK'] && $control == 'CHECKOUT') { $this->model->defaults['CHECKOUT'] = $result['value'] = new NullDateTime(); } $res[$control] = $result; } $this->view->assign('YESPLACES', $this->model->defaults['YESPLACES']); if (isset($_GET['DOLOAD'])) { $this->view->assign('result', $this->model->getPRICES()); } $res['MAX_CHILD_AGE'] = $this->model->maxChildAge(); $ages = Samo_Utils::ifs(Samo_Request::integers('AGES'), [4, 6, 8]); foreach ($ages as $idx => $age) { $this->view->assign('AGE' . ($idx + 1), $age); } $res['ONLY_ROUNDTRIP'] = $this->model->defaults['ONLY_ROUNDTRIP']; $res['SEARCHMODE'] = $this->model->SEARCHMODE(); $this->view->bulk_assign($res); if (isset($this->model->defaults['AGES']) && is_array($this->model->defaults['AGES'])) { foreach ($this->model->defaults['AGES'] as $idx => $age) { if ($idx <= 2) { $this->view->assign('AGE' . ($idx + 1), $age); } else { break; } } } Samo_Registry::get('response')->headers('X-UA-Compatible', 'IE=Edge'); parent::default_action(); } public function samo_action($action) { if (!isset($this->actions[$action])) { Samo_Registry::get('response')->not_found(); } foreach ($this->actions[$action] as $control) { $result = $this->model->loadData($control); if ($control == 'CHECKIN' || $control == 'CHECKOUT') { if (0 == $this->model->defaults['FREIGHTBACK'] && $control == 'CHECKOUT') { $result['value'] = new NullDateTime(); } $this->view->calendar_attrs($control, $result['value'], $result['startDate'], $result['validDates']); } elseif ($control == 'TOWNTOINC') { $this->view->add_options($control, $result, 'controls.tpl'); } elseif ($control == 'CURRENCY') { $this->view->add_options('CURRENCYINC', $result, '../api_controls.tpl'); } elseif ($control == 'AIRLINES') { $this->view->add_options('AIRLINE', $result, '../api_controls.tpl'); } else { $this->view->add_options($control, $result, '../api_controls.tpl'); } } return true; } public function fast() { $res = array(); $this->model->defaults['ADULT'] = Samo_Utils::ifs(Samo_Request::intval('ADULT'), 1); foreach ($this->actions['INIT'] as $control) { $res[$control] = $this->model->loadData($control); } $res['SEARCHMODE'] = $this->model->SEARCHMODE(true); $res['MAX_CHILD_AGE'] = $this->model->maxChildAge(); $ages = Samo_Utils::ifs(Samo_Request::integers('AGES'), [4, 6, 8]); foreach ($ages as $idx => $age) { $res['AGE' . ($idx + 1)] = $age; } $this->view->bulk_assign($res)->render('3_fast'); $this->default_app_env(); } public function PRICES() { try { $this->view->assign('result', $this->model->getPRICES()); $this->view->element_update('resultset', 'resultset.tpl'); } catch (Exception $e) { $this->view->error($e->getMessage()); } } public function BRON() { $this->model->getBRON(); } } 