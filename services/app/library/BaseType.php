<?php
 class BaseType implements TypeInterface, JsonSerializable { public function __construct($array = []) { $this->initialize($array); } public function initialize($array) { if (count($array)) { foreach ($array as $key => $val) { $this->$key = $val; } } } public function transform($param = false) { } public function jsonSerialize() { if (isset($this->error)) { return ['error' => $this->error]; } return $this; } public function toArray($all = true) { if ($all) { return (array)$this; } $array = (array)$this; $result = []; foreach ($array as $key => $val) { if (!is_null($val)) { $result[$key] = $val !== 'null' ? $val : null; } } return $result; } } 