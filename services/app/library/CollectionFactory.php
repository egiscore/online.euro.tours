<?php
 use Phalcon\Exception as Ex; use Phalcon\Text; abstract class CollectionFactory { public static function create($type) { try { $class = $type . 'Collection'; self::createClass($class); $obj = new $class($type); return $obj; } catch (Ex $e) { throw new Ex($e->getMessage()); } } public static function createFromArray($name, $array) { if (is_array($array)) { $name = Text::camelize($name); $collection = self::create($name); foreach ($array as $val) { $obj = new $name($val); $collection->add($obj); } return $collection; } else { throw new Exception( 'CollectionFactory::createFromArray  - 
            the signature in the form of an array has not been transferred' ); } } private static function createClass($class) { if (!class_exists($class)) { eval('class ' . $class . ' extends Collection { }'); } } } 