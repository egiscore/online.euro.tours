<?php
 namespace Samo\DB; use Phalcon\Http\Request; use Phalcon\Text; class DB { public $db; const FETCH_ALL = 1; const FETCH_ROW = 2; const FETCH_ONE = 3; private $request; public function __construct() { $this->request = new Request(); $this->db = db_connect($this->getTownFromInc(), $this->getStateInc()); $this->db->errorField('error'); } private function getTownFromInc() { if ($this->request->get('page') == 'search_hotel') { return \Samo::TOWNFROMHOTELINC; } else { return (int)$this->request->get('TOWNFROMINC') ?: TOWNFROMINC; } } private function getStateInc() { return (int)$this->request->get('STATEINC') ?: null; } public function __call($name, $arguments) { return call_user_func_array([$this->db, $name], $arguments); } public function prepare($proc, $params = [], $database = 'MASTER', $shema = 'dbo') { return $this->db->formatExec("<{$database}>.{$shema}.{$proc}", $params); } public function result($query, $fetch = self::FETCH_ALL) { switch ($fetch) { case self::FETCH_ALL: return $this->db->fetchAll($query); case self::FETCH_ROW: return $this->db->fetchRow($query); case self::FETCH_ONE: return $this->db->fetchOne($query); } } public function resultCollection($query, $name, $transform = false) { $result = $this->result($query); $name = Text::camelize($name); $collection = \CollectionFactory::create($name); if (empty($result)) { $collection->resultEmpty = true; } else { foreach ($result as $row) { $res = true; $obj = new $name($row); if ($transform) { $res = $obj->transform($transform); } if ($res !== false) { $collection->add($obj); } } } return $collection; } public function rawMode($mode = false) { $this->db->rawMode($mode); } } 